@layer layout {

  .content-grid {
    --padding-inline: 1rem;
    --content-max-width: 1200px;
    --breakout-max-width: 1400px;

    --breakout-size: calc(
      (var(--breakout-max-width) - var(--content-max-width)) / 2
    );

    display: grid;
    grid-template-columns:
      [full-width-start] minmax(var(--padding-inline), 1fr)
      [breakout-start] minmax(0, var(--breakout-size))
      [content-start] min(
        100% - (var(--padding-inline) * 2),
        var(--content-max-width)
      )
      [content-end]
      minmax(0, var(--breakout-size)) [breakout-end]
      minmax(var(--padding-inline), 1fr) [full-width-end];
  }

  .content-grid > :not(.breakout, .full-width),
  .full-width > :not(.breakout, .full-width) {
    grid-column: content;
  }

  .content-grid > .breakout,
  .full-width > .breakout {
    grid-column: breakout;
  }

  .content-grid > .full-width {
    grid-column: full-width;

    display: grid;
    grid-template-columns: inherit;
    grid-auto-rows: max-content;
  }

  .content-grid > .full-width-no-grid {
    grid-column: full-width;
  }

  img.full-width {
    width: 100%;
    max-height: 45vh;
    object-fit: cover;
  }
  /* FLOW */
  .flow > * + * {
    margin-block-start: 1em;
  }

  /* CARD GRID */
  .card-grid {
    --grid-max-col-count: 4;
    --grid-min-col-size: 200px;
    --grid-gap: 1rem;

    /* calculations, do not touch */
    --grid-col-size-calc: calc(
      (100% - var(--grid-gap) * var(--grid-max-col-count)) /
        var(--grid-max-col-count)
    );
    --grid-col-min-size-calc: min(
      100%,
      max(var(--grid-min-col-size), var(--grid-col-size-calc))
    );

    display: grid;
    gap: var(--grid-gap);

    grid-template-columns: repeat(
      auto-fit,
      minmax(var(--grid-col-min-size-calc), 1fr)
    );
  }

  /* FEATURE GRID */
  .feature-grid {
    --feature-grid-gap: 200px;
    --feature-gap: var(--bl-spacing-x-large);
    --feature-justify: space-between;

    display: flex;
    flex-direction: column;
    gap: calc(var(--feature-grid-gap) / 2);

    & > * {
      display: flex;
      flex-direction: column;
      flex-wrap: nowrap;
      gap: var(--feature-gap);
      justify-content: var(--feature-justify);
    }


  }

  @media (width > 600px) {
    .feature-grid {
      gap: var(--feature-grid-gap);

      & > * {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        gap: var(--feature-gap);
        justify-content: var(--feature-justify);

        &:nth-child(even) {
          flex-direction: row-reverse;
        }
      }
    }
  }
}
